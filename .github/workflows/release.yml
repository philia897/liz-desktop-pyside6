name: Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install Maturin
        run: pip install maturin

      - name: Build Rust module
        working-directory: ./bluebird
        run: |
          maturin build --release --interpreter python
          pip install target/wheels/bluebird-*.whl --force-reinstall

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PySide6 pyinstaller

      - name: Run PyInstaller (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller \
            --add-data "theme:theme" \
            --add-data "resources:resources" \
            --name Liz-desktop \
            --onefile \
            --windowed \
            --clean \
            main.py

      - name: Run PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller `
            --add-data "theme;theme" `
            --add-data "resources;resources" `
            --name Liz-desktop `
            --onefile `
            --windowed `
            --clean `
            main.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Liz-desktop-${{ matrix.os }}
          path: |
            dist/
            !dist/*.spec
